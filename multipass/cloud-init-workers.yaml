#cloud-config
bootcmd:
- printf "[Resolve]\nDNS=8.8.8.8" > /etc/systemd/resolved.conf
- [systemctl, restart, systemd-resolved]
- sleep 10
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
- echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
- sleep 10
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
- echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
- curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
- echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
- chmod a+r /etc/apt/keyrings/docker.gpg
- chmod a+r /etc/apt/keyrings/kubernetes-apt-keyring.gpg
users:
  - name: root
    ssh_authorized_keys:
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzIQPpssKYTsoX30Uqy/Len7HlgpevsYXM/Urb5uMdtNnc0dLT0zwd7rfOOiycuYHVf+ISyEEauAJuExln/t88SEH6DTZ1PrL8Ef4jY0e4D+yn5GfUBRD9pHWeiPJJPsDi/qpVNkRDJl4RoQ2VCesOJ00uh5bRoRhxs2uwEyXdUrPFXs3m/kbilkFPxPAiAfgJZyKxzdpiRK8W9Mk9GlSNaT+5mg+8rsaAdy5V/7IWH4zPJYDTEfi9v8ptP/M/1pH8jypq6xtkSWCK6Q02vmxbHAaMpJAf3GZRItWTGBXjfdZeBNBev+P8XsckJ9DsMp6zib5M6qaC/p1r7TFsop+TudxjMfbBSI3tnrWT2bmGG/SsVqq+5bZgWFqwehOYwZ/sFIlUmi9rCVt+cOQGUx+4vmnw1cxpzHAC9zw1XtrFchPCFMI02cyPaOoMIwhVaxV7BuxL9pX28YIoKRZYtJ7gEKVPy/fbxogeVk4j+tC2zkyw12F/ih+nPTAr3FoYww0= anssbokd4@bitbucket

growpart:
    mode: auto
    devices: ["/"]
manage_etc_hosts: localhost
locale: "en_US.UTF-8"
package_update: true
package_upgrade: true
# apt_update: true
# apt_upgrade: true
packages:
    # if you change kubernetes version...
    - kubeadm=1.28.2-1.1
    - kubelet=1.28.2-1.1
    - kubectl=1.28.2-1.1
    # ...also use a SUPPORTED docker version for it
    - docker-ce
    - apt-transport-https
    - ntp
    - jq
    - make
write_files:
  - path: /etc/modules
    content: |
      ip_vs
      ip_vs_rr
      ip_vs_wrr
      ip_vs_sh
      nf_conntrack_ipv4
  - path: /etc/syctl.conf
    content: |
      net.ipv4.ip_forward=1
      net.bridge.bridge-nf-call-ip6tables=1
      net.bridge.bridge-nf-call-iptables=1
  - path: /etc/environment
    content: |
      LC_ALL=en_US.UTF-8
      LANG=en_US.UTF-8
      KUBECONFIG=/etc/kubernetes/admin.conf
  - path: /etc/docker/daemon.json
    content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m" },
        "storage-driver": "overlay2"
        }
runcmd:
- sysctl -p
- systemctl daemon-reload
- systemctl restart docker kubelet
- wget https://go.dev/dl/go1.21.3.linux-arm64.tar.gz
- tar -xvf go1.21.3.linux-arm64.tar.gz
- mv go /usr/local/
- export GOPATH=/usr/local/go
- export GOCACHE=$GOPATH/cache
- export PATH=$GOPATH/bin:$PATH
- git clone https://github.com/Mirantis/cri-dockerd.git cri-dockerd
- cd cri-dockerd
- make cri-dockerd
- mkdir -p /usr/local/bin
- install -o root -g root -m 0755 cri-dockerd /usr/local/bin/cri-dockerd
- install packaging/systemd/* /etc/systemd/system
- sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
- systemctl daemon-reload
- systemctl enable --now cri-docker.socket
- kubeadm join 192.168.107.8:6443 --token yxsidg.gwenr5fs8s79xgll --discovery-token-ca-cert-hash sha256:633fe9e553fedc576083a1a0f3ff632ec1c4981d6f63f64418ef93c6589893cd  --cri-socket unix:///var/run/cri-dockerd.sock
- echo  > /tmp/haproxy_ip
- touch /tmp/signal
